token = ""  # The token for the bot
owners = [ 141231597155385344, 322542134546661388, ]  # List of owner IDs - these people override all permission checks
user_agent = "Apple.py (DiscordBot applepy@voxelfox.co.uk)"
dm_uncaught_errors = false  # Whether or not to DM the owners when unhandled errors are encountered
ephemeral_error_messages = true
owners_ignore_check_failures = true
default_prefix = "."  # The prefix for the bot's commands
support_guild_id = 208895639164026880  # The ID for the support guild - used by `Bot.fetch_support_guild()`
bot_support_role_id = 522072743273824262  # The ID used to determine whether or not the user is part of the bot's support team - used for `.checks.is_bot_support()` check
guild_settings_prefix_column = "prefix"  # Used if multiple bots connect to the same database and need to seperate their prefixes
cached_messages = 200

# Event webhook information - some of the events (noted) will be sent to the specified url
[event_webhook]
    event_webhook_url = ""
    [event_webhook.events]  # If you use true then your `event_webhook_url` will be used. If it's a string it'll assume that's a different webhook
        guild_join = true
        guild_remove = true
        shard_connect = false
        shard_disconnect = false
        shard_ready = false
        bot_ready = false
        unhandled_error = true

# The intents that the bot should start with
[intents]
    guilds = true  # Guilds - recommended: true. Used for guild join/remove, channel create/delete/update, Bot.get_channel, Bot.guilds.
    members = false  # Members - recommended: false (privileged intent). Used for member join/remove/update, Member.roles, Member.nick, User.name, etc.
    bans = false  # Bans - recommended: false. Used for member ban/unban.
    emojis = false  # Emojis - recommended: false. Used for guild emojis update, Bot.get_emoji, Guild.emojis.
    integrations = false  # Integrations - recommended: false. Used for guild integrations update.
    webhooks = false  # Webhooks - recommended: false. Used for guild webhooks update.
    invites = false  # Invites - recommended: false. Used for invite create/delete.
    voice_states = true  # Voice states - recommended: false. Used for voice state update, VoiceChannel.members, Member.voice.
    presences = false  # Presences - recommended: false (privileged intent). Used for member update (for activities and status), Member.status.
    guild_messages = true  # Guild messages - recommended: true. Used for message events in guilds.
    dm_messages = true  # DM messages - recommended: true. Used for message events in DMs.
    guild_reactions = false  # Guild reactions - recommended: false. Used for [raw] reaction add/remove/clear events in guilds.
    dm_reactions = false  # DM reactions - recommended: false. Used for [raw] reaction add/remove/clear events in DMs.
    guild_typing = false  # Guild typing - recommended: false. Used for the typing event in guilds.
    dm_typing = false  # DM typing - recommended: false. Used for the typing event in Dms.

# Data used to send API requests to whatever service
[bot_listing_api_keys]
    topgg_token = ""  # The token used to post data to top.gg
    discordbotlist_token = ""  # The token used to post data to discordbotlist.com

# Data that's copied directly over to a command
[command_data]
    website_link = ""  # A link to be used on !website
    guild_invite = "https://discord.gg/vfl"  # A link to be used on !support
    github_link = "https://github.com/Voxel-Fox-Ltd/Apple.py"  # A link to be used on !git
    donate_link = ""  # A link to be used on !donate
    invite_command_permissions = [ "send_messages", "add_reactions", ]  # args here are passed directly to discord.Permissions. An empty list disabled the invite command
    echo_command_enabled = true  # Whether or not the invite command is enabled
    stats_command_enabled = true  # Whether or not the stats command is enabled
    vote_command_enabled = false  # Whether or not the top.gg vote command is enabled
    updates_channel_id = 0  # The ID of the news channel for the bot

[bot_info]
    enabled = true
    content = """
        **Apple.py** is a general-purpose Discord bot, filled *mostly* with random developer commands.
    """
    thumbnail = ""
    image = ""
    [bot_info.links.Website]
        url = "https://applepy.vfl.gg"
    [bot_info.links."Support Server"]  # You CAN have multiple words in a label
        url = "https://discord.gg/vfl"
    [bot_info.links.Git]
        url = "https://github.com/Voxel-Fox-Ltd/Apple.py"

# Content to be included in the help command
[help_command]
    dm_help = true  # Whether or not the help embed should be DMd to the user
    content = ""  # Additional content to be sent with the embed

# Wowowow API keys
[api_keys]
    steam = ""
    cat_api = ""  # https://thecatapi.com
    omdb = ""
    wolfram = ""
    [api_keys.dialogflow]  # Thanks https://developers.google.com/oauthplayground/
        client_id = ""
        client_secret = ""
        refresh_token = ""
    [api_keys.tumblr]
        client_key = ""
        client_secret = ""
    [api_keys.google]  # Google custom search API
        api_key = ""  # https://console.cloud.google.com/apis/credentials
        search_engine_id = ""  # https://programmablesearchengine.google.com/cse/all

# This data is passed directly over to asyncpg.connect()
[database]
    enabled = true
    user = "applepy"
    password = ""
    database = "applepy"
    host = "127.0.0.1"
    port = 5432

# This data is passed directly over to aioredis.connect()
[redis]
    enabled = false
    host = "127.0.0.1"
    port = 6379
    db = 0

# The data that gets shoves into custom context for the embed
[embed]
    enabled = false  # whether or not to embed messages by default
    content = ""  # default content to be added to the embed message
    colour = 0  # a specific colour for the embed - 0 means random
    [embed.author]
        enabled = false
        name = "{ctx.bot.user}"
        url = ""  # the url added to the author
    [[embed.footer]]  # an array of possible footers
        text = "Add the bot to your server! ({ctx.clean_prefix}invite)"  # text to appear in the footer
        amount = 1  # the amount of times this particular text is added to the pool

# What the bot is playing
[presence]
    activity_type = "playing"  # Should be one of 'playing', 'listening', 'watching', 'competing'
    text = ".help"
    status = "online"  # Should be one of 'online', 'invisible', 'idle', 'dnd'
    include_shard_id = true  # Whether or not to append "(shard N)" to the presence; only present if there's more than 1 shard
    [presence.streaming]  # This is used to automatically set the bot's status to your Twitch stream when you go live
        twitch_usernames = [ "kaylum_", ]  # The URL to your Twitch.tv channel
        twitch_client_id = ""  # Your client ID - https://dev.twitch.tv/console/apps
        twitch_client_secret = ""  # Your client secret

# Used to generate the invite link - if not set then will use the bot's ID, which is correct more often than not
[oauth]
    client_id = ""

# This is where you can set up all of your analytics to be sent to GA; automatically disabled if no data is provided
[google_analytics]
    tracking_id = ""  # Tracking ID for your GA instance
    app_name = ""  # The name of your bot - what you want GA to name this traffic source
    document_host = ""  # The (possibly fake) URL you want to tell GA this website is

# It's time for better analytics! Let's give statsd a little try
[statsd]
    host = "127.0.0.1"
    port = 8125  # This is the DataDog default, 9125 is the general statsd default
    [statsd.constant_tags]
        service = ""  # Put your bot name here - leave blank to disable stats collection

# Store all the bot info down here
[[bot_info]]
    user_id = 199136310416375808  # Apy
    description = "Woah, that's me! I'm just a collection of weird stuff that Kae thinks up. I've got quotes, nickname normalising, cat images, other wild and random stuff like that. Just run `.help` and see what I've got in store."
